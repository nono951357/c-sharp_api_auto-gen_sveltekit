/**
 * MLSZ_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Gol model module.
 * @module model/Gol
 * @version v1.2
 */
class Gol {
    /**
     * Constructs a new <code>Gol</code>.
     * @alias module:model/Gol
     */
    constructor() { 
        
        Gol.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Gol</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Gol} obj Optional instance to populate.
     * @return {module:model/Gol} The populated <code>Gol</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Gol();

            if (data.hasOwnProperty('golId')) {
                obj['golId'] = ApiClient.convertToType(data['golId'], 'Number');
            }
            if (data.hasOwnProperty('merkozesId')) {
                obj['merkozesId'] = ApiClient.convertToType(data['merkozesId'], 'Number');
            }
            if (data.hasOwnProperty('jatekosId')) {
                obj['jatekosId'] = ApiClient.convertToType(data['jatekosId'], 'Number');
            }
            if (data.hasOwnProperty('asszisztJatekosId')) {
                obj['asszisztJatekosId'] = ApiClient.convertToType(data['asszisztJatekosId'], 'Number');
            }
            if (data.hasOwnProperty('csapatId')) {
                obj['csapatId'] = ApiClient.convertToType(data['csapatId'], 'Number');
            }
            if (data.hasOwnProperty('golIdeje')) {
                obj['golIdeje'] = ApiClient.convertToType(data['golIdeje'], 'Date');
            }
            if (data.hasOwnProperty('golVideoId')) {
                obj['golVideoId'] = ApiClient.convertToType(data['golVideoId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Gol</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Gol</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} golId
 */
Gol.prototype['golId'] = undefined;

/**
 * @member {Number} merkozesId
 */
Gol.prototype['merkozesId'] = undefined;

/**
 * @member {Number} jatekosId
 */
Gol.prototype['jatekosId'] = undefined;

/**
 * @member {Number} asszisztJatekosId
 */
Gol.prototype['asszisztJatekosId'] = undefined;

/**
 * @member {Number} csapatId
 */
Gol.prototype['csapatId'] = undefined;

/**
 * @member {Date} golIdeje
 */
Gol.prototype['golIdeje'] = undefined;

/**
 * @member {Number} golVideoId
 */
Gol.prototype['golVideoId'] = undefined;






export default Gol;

