/**
 * MLSZ_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Csapat from './model/Csapat';
import CsapatStatusz from './model/CsapatStatusz';
import Gol from './model/Gol';
import Jatekos from './model/Jatekos';
import LoginModel from './model/LoginModel';
import Media from './model/Media';
import MediaTipus from './model/MediaTipus';
import Merkozes from './model/Merkozes';
import MerkozesTipus from './model/MerkozesTipus';
import Nemzetiseg from './model/Nemzetiseg';
import Pozicio from './model/Pozicio';
import RegisterModel from './model/RegisterModel';
import Stadion from './model/Stadion';
import Status from './model/Status';
import Szankcio from './model/Szankcio';
import SzankcioTipus from './model/SzankcioTipus';
import Varos from './model/Varos';
import Verseny from './model/Verseny';
import AuthApi from './api/AuthApi';
import CsapatApi from './api/CsapatApi';
import GolApi from './api/GolApi';
import JatekosApi from './api/JatekosApi';
import MediaApi from './api/MediaApi';
import MerkozesApi from './api/MerkozesApi';
import NemzetisegApi from './api/NemzetisegApi';
import StadionApi from './api/StadionApi';
import SzankcioApi from './api/SzankcioApi';
import VarosApi from './api/VarosApi';
import VersenyApi from './api/VersenyApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MlszApi = require('index'); // See note below*.
* var xxxSvc = new MlszApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MlszApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MlszApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MlszApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Csapat model constructor.
     * @property {module:model/Csapat}
     */
    Csapat,

    /**
     * The CsapatStatusz model constructor.
     * @property {module:model/CsapatStatusz}
     */
    CsapatStatusz,

    /**
     * The Gol model constructor.
     * @property {module:model/Gol}
     */
    Gol,

    /**
     * The Jatekos model constructor.
     * @property {module:model/Jatekos}
     */
    Jatekos,

    /**
     * The LoginModel model constructor.
     * @property {module:model/LoginModel}
     */
    LoginModel,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The MediaTipus model constructor.
     * @property {module:model/MediaTipus}
     */
    MediaTipus,

    /**
     * The Merkozes model constructor.
     * @property {module:model/Merkozes}
     */
    Merkozes,

    /**
     * The MerkozesTipus model constructor.
     * @property {module:model/MerkozesTipus}
     */
    MerkozesTipus,

    /**
     * The Nemzetiseg model constructor.
     * @property {module:model/Nemzetiseg}
     */
    Nemzetiseg,

    /**
     * The Pozicio model constructor.
     * @property {module:model/Pozicio}
     */
    Pozicio,

    /**
     * The RegisterModel model constructor.
     * @property {module:model/RegisterModel}
     */
    RegisterModel,

    /**
     * The Stadion model constructor.
     * @property {module:model/Stadion}
     */
    Stadion,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Szankcio model constructor.
     * @property {module:model/Szankcio}
     */
    Szankcio,

    /**
     * The SzankcioTipus model constructor.
     * @property {module:model/SzankcioTipus}
     */
    SzankcioTipus,

    /**
     * The Varos model constructor.
     * @property {module:model/Varos}
     */
    Varos,

    /**
     * The Verseny model constructor.
     * @property {module:model/Verseny}
     */
    Verseny,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The CsapatApi service constructor.
    * @property {module:api/CsapatApi}
    */
    CsapatApi,

    /**
    * The GolApi service constructor.
    * @property {module:api/GolApi}
    */
    GolApi,

    /**
    * The JatekosApi service constructor.
    * @property {module:api/JatekosApi}
    */
    JatekosApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The MerkozesApi service constructor.
    * @property {module:api/MerkozesApi}
    */
    MerkozesApi,

    /**
    * The NemzetisegApi service constructor.
    * @property {module:api/NemzetisegApi}
    */
    NemzetisegApi,

    /**
    * The StadionApi service constructor.
    * @property {module:api/StadionApi}
    */
    StadionApi,

    /**
    * The SzankcioApi service constructor.
    * @property {module:api/SzankcioApi}
    */
    SzankcioApi,

    /**
    * The VarosApi service constructor.
    * @property {module:api/VarosApi}
    */
    VarosApi,

    /**
    * The VersenyApi service constructor.
    * @property {module:api/VersenyApi}
    */
    VersenyApi
};
